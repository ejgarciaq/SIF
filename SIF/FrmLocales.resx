<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DP//M8z//zPM//8wDP//MAz//wAA//8AAP8=
</value>
  </data>
</root>